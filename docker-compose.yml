version: '3.9'

x-healthcheck: &healthcheck
  healthcheck:
    test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
    interval: 10s
    timeout: 5s
    retries: 10
    start_period: 10s

services:
  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      SERVER_PORT: 8080

      CATALOG_HOST: catalog-api
      CHAT_HOST: chat-api
      NOTIFICATION_HOST: notification-api
      TRANSACTION_HOST: transaction-api
      WALLET_HOST: wallet-api
      USER_HOST: user-api

      CATALOG_PORT: 8080
      CHAT_PORT: 8080
      NOTIFICATION_PORT: 8080
      TRANSACTION_PORT: 8080
      WALLET_PORT: 8080
      USER_PORT: 8080
    networks:
      - catalog
      - chat
      - notification
      - transaction
      - wallet
      - user

  # Microservices
  catalog-api:
    build:
      context: ./catalog
      dockerfile: Dockerfile
    container_name: catalog-api
    environment:
      SERVER_PORT: 8080
      MYSQL_DATABASE: catalog
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_HOST: catalog-db
      JWT_SECRET: secret
      GATEWAY_HOST: api-gateway
      GATEWAY_PORT: 8080
    depends_on:
      catalog-db:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    networks:
      - catalog
      - shared

  chat-api:
    build:
      context: ./chat
      dockerfile: Dockerfile
    container_name: chat-api
    environment:
      SERVER_PORT: 8080
      MYSQL_DATABASE: chat
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_HOST: chat-db
      JWT_SECRET: secret
      GATEWAY_HOST: api-gateway
      GATEWAY_PORT: 8080
    depends_on:
      rabbitmq:
        condition: service_healthy
      chat-db:
        condition: service_healthy
    networks:
      - chat

  notification-api:
    build:
      context: ./notification
      dockerfile: Dockerfile
    container_name: notification-api
    environment:
      SERVER_PORT: 8080
      MYSQL_DATABASE: notification
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_HOST: notification-db
      JWT_SECRET: secret
    depends_on:
      rabbitmq:
        condition: service_healthy
      notification-db:
        condition: service_healthy
    networks:
      - notification

  transaction-api:
    build:
      context: ./transaction
      dockerfile: Dockerfile
    container_name: transaction-api
    environment:
      SERVER_PORT: 8080
      MYSQL_DATABASE: transaction
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_HOST: transaction-db
      JWT_SECRET: secret
      API_GATEWAY_URL: http://api-gateway:8080
    depends_on:
      rabbitmq:
        condition: service_healthy
      transaction-db:
        condition: service_healthy
    networks:
      - transaction
      - shared

  wallet-api:
    build:
      context: ./wallet
      dockerfile: Dockerfile
    container_name: wallet-api
    environment:
      SERVER_PORT: 8080
      MYSQL_DATABASE: wallet
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_HOST: wallet-db
      JWT_SECRET: secret
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASS: guest
      MAX_RETRIES: 5
    depends_on:
      rabbitmq:
        condition: service_healthy
      wallet-db:
        condition: service_healthy
    networks:
      - wallet
      - rabbit
      - shared

  user-api:
    build:
      context: ./user
      dockerfile: Dockerfile
    container_name: user-api
    environment:
      SERVER_PORT: 8080
      MYSQL_DATABASE: user
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_HOST: user-db
      JWT_SECRET: secret
      JWT_EXPIRATION_TIME: 10h
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASS: guest
    depends_on:
      rabbitmq:
        condition: service_healthy
      user-db:
        condition: service_healthy
    networks:
      - user
      - rabbit

  # Databases
  catalog-db:
    image: mysql:8.0
    container_name: catalog-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: catalog
    networks:
      - catalog
    volumes:
      - catalog:/var/lib/mysql
    <<: *healthcheck

  chat-db:
    image: mysql:8.0
    container_name: chat-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: chat
    networks:
      - chat
    volumes:
      - chat:/var/lib/mysql
    <<: *healthcheck

  notification-db:
    image: mysql:8.0
    container_name: notification-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: notification
    networks:
      - notification
    volumes:
      - notification:/var/lib/mysql
    <<: *healthcheck

  transaction-db:
    image: mysql:8.0
    container_name: transaction-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: transaction
    networks:
      - transaction
    volumes:
      - transaction:/var/lib/mysql
    <<: *healthcheck

  wallet-db:
    image: mysql:8.0
    container_name: wallet-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: wallet
    networks:
      - wallet
    volumes:
      - wallet:/var/lib/mysql
    <<: *healthcheck

  user-db:
    image: mysql:8.0
    container_name: user-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: user
    networks:
      - user
    volumes:
      - user:/var/lib/mysql
    <<: *healthcheck

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - rabbit
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

networks:
  catalog:
  chat:
  notification:
  transaction:
  wallet:
  user:
  rabbit:
  shared:

volumes:
  catalog:
  chat:
  notification:
  transaction:
  wallet:
  user:
